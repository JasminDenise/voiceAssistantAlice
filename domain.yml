version: "3.1"

# categories of things users say
# classes for multiclass classification
intents:
  - greet
  - goodbye
  - affirm # confirm booking
  - deny # deny booking
  - stop # stop booking process
  - bot_challenge
  - inform_booking_details # trigger the restaurant form
  - inform_past_booking
  - inform_fallback
  # - inform_cuisine
  # - inform_dietary
  # - inform_day
  # - inform_guests
  # - inform_past_booking
  # - inform_time
  - rebook_yes
  - rebook_no


 # pieces of info extracted form incoming text
entities:
  - past_bookings
  - time_of_booking
  - day_of_booking
  - num_of_guests
  - cuisine_preferences
  - dietary_preferences
  - past_restaurant_name

# assistant responses
# can include mutliple possible responses -> rasa randomly select one 
responses:
  utter_greet:
  - text: "Hey! How are you?"
  - text: "Hello there :-)"
  - text: "Hi! How can I help you today?"
  - text: "Hi! Let's book you a restaurant."

  utter_goodbye:
  - text: "Bye"
  - text: "Goodbye! Have a great day."

  utter_iamabot:
  - text: "I’m Alice, your restaurant assistant bot."
 
  utter_ask_past_bookings:
  - text: "Have you had any past bookings?"
  - text: "Have you booked with us before?"

  utter_ask_past_restaurant_name:
  - text: "What was the name of the restaurant you booked before?"
  - text: "Can you tell me the name of the restaurant you previously visited?"

  utter_ask_dietary_preferences:
  - text: "Do you have any dietary preferences? For example, vegetarian or vegan?"
  - text: "Do you have any dietary preferences or restrictions?"

  utter_ask_cuisine_preferences:
  - text: "What kind of cuisine would you like?"
  - text: "What kind of cuisine do you prefer?"

  utter_ask_time_of_booking:
  - text: "What time would you like to book the table?"
  - text: "What time would you like the reservation?"

  utter_ask_day_of_booking:
  - text: "Which day would you like to book for?"
  - text: "On which day do you want to book?"

  utter_ask_num_of_guests:
  - text: "How many guests will be joining you?"
  - text: "How many people are you booking for?"

  utter_confirm_booking:
  - text: "Is this okay?"
  - text: "Yes, that's perfect. Is this okay?"

  utter_ask_for_other_options:
  - text: "Do you have any other preferences?"

  utter_booking_canceled:
  - text: "Okay, I have cancelled your booking request."

  utter_booking_slots: 
  - text: "So you're booking a {cuisine_preferences} restaurant for {num_of_guests} guests on {day_of_booking} at {time_of_booking}, with dietary preference: {dietary_preferences}."

  utter_submit:
  - text: "All done. I hope you enjoy your meal!"
  - text: "Great! I’ve recorded your booking. Enjoy your meal!"

  utter_ask_continue:
  - text: "Are you sure you want to stop the form?"

  utter_default:
  - text: "I'm sorry, I didn't quite understand that. Could you please rephrase?"



# storing information, variables remembered over the course of a conversation
slots:
  past_bookings:
    type: bool
    mappings:
      - type: from_intent
        intent: affirm
        value: true
      - type: from_intent
        intent: deny
        value: false

  rebook:
    type: bool
    mappings:
      - type: from_intent
        intent: rebook_yes
        value: true
      - type: from_intent
        intent: rebook_no
        value: false

  past_restaurant_name:
    type: text
    influence_conversation: false
    mappings:
      - type: from_entity
        entity: past_restaurant_name  # Extract restaurant name from user's input

  dietary_preferences:
    type: text
    mappings:
      - type: from_entity
        entity: dietary_preferences

  cuisine_preferences:
    type: text
    mappings:
      - type: from_entity
        entity: cuisine_preferences

  time_of_booking:
    type: text
    influence_conversation: true
    mappings:
      - type: from_entity
        entity: time_of_booking

  day_of_booking:
    type: text
    influence_conversation: true
    mappings:
      - type: from_entity
        entity: day_of_booking

  num_of_guests:
    type: float
    min_value: 1
    max_value: 20
    influence_conversation: true
    mappings:
      - type: from_entity
        entity: num_of_guests

  conversation_turn:
    type: float
    initial_value: 0
    influence_conversation: false
    mappings:
      - type: custom
  

# business logic, mandatory information; 
forms:
  restaurant_form:
    required_slots:
      - past_bookings
      - cuisine_preferences
      - dietary_preferences
      - time_of_booking
      - day_of_booking
      - num_of_guests

  rebook_form:
    required_slots:
      - time_of_booking
      - day_of_booking
      - num_of_guests


# custom actions (run any code you want, including API calls, database queries etc.): https://rasa.com/docs/rasa/custom-actions/
actions:
  - action_suggest_restaurant           # gives the user a recommendation
  - action_track_turn_count             # tracks how many Q&A turns the bot had
  - action_default_fallback             # handles misunderstood inputs
  - action_ask_if_rebook                # asks the user if they want to rebook the same place
  - validate_restaurant_form            # validates slots for new booking form
  - validate_rebook_form                # validates slots for rebook form



session_config:
  session_expiration_time: 60
  carry_over_slots_to_new_session: true
